// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		// "cmake.configureArgs": [
		// 	"-DNEO_SKIP_OCL_UNIT_TESTS=TRUE",
		// 	"-DSUPPORT_GEN8=0",
		// 	"-DSUPPORT_GEN9=0",
		// 	"-DSUPPORT_GEN11=0",
		// 	"-DSUPPORT_GEN12LP=1",
		// 	"-DBUILD_WITH_L0=1",
		// 	"LIBMETEE_REPO"=https://github.com/intel/metee
		// ],
		// "cmake.configureSettings": {
		// 	"NEO_SKIP_OCL_UNIT_TESTS": "TRUE",
		// 	"SUPPORT_GEN8": "0",
		// 	"SUPPORT_GEN9": "0",
		// 	"SUPPORT_GEN11": "0",
		// 	"SUPPORT_GEN12LP": "1",
		// 	"BUILD_WITH_L0": "1",
		// },
		// "cmake.buildDirectory": "${workspaceFolder}/../build",
		// "cmake.buildArgs": [
		// 	" -j",
		// 	"`nproc`",
		// 	"ze_intel_gpu",
		// 	"run_unit_tests"
		// ]
		// "cmake.copyCompileCommands": "${workspaceFolder}/compile_commands.json",
		// "cmake.sourceDirectory": "${workspaceFolder}/neo"
	},
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools-extension-pack",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [
	// 	"2222:22"
	// ],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [
		"--gpus",
		"all",
		"--privileged",
		// "--cap-add=SYS_PTRACE",
		// "--security-opt",
		// "seccomp=unconfined"
	],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": [ 
		// "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
		"source=/usr/lib/wsl/drivers,target=/usr/lib/wsl/drivers,type=bind,readonly=true",
		"source=/usr/lib/wsl/lib/libdxcore.so,target=/usr/lib/wsl/lib/libdxcore.so,type=bind,readonly=true",
		"source=${localWorkspaceFolderBasename}-vscode-extension-volume,target=/root/.vscode-server/extensions,type=volume"
	],

	// "postCreateCommand": "./setup-gmmli.sh",
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
